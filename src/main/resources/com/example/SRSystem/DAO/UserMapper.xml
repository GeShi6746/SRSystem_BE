<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.example.srsystem.DAO.UserMapper">

    <resultMap id = "UserResult" type = "com.example.srsystem.domain.entity.Users" >
        <id property = "userId" column = "UserID" />
        <result property="firstName" column="FirstName" />
        <result property="lastName" column="LastName" />
        <result property="username" column="Username" />
        <result property="password" column="Password"/>
        <result property="email" column="Email" />
    </resultMap>

    <!-- register -->
    <insert id="register" parameterType="com.example.srsystem.domain.entity.Users">
        insert into users(`firstName`, `lastName`,`username`, `password`, `email`)
        values (#{firstName}, #{lastName}, #{username}, #{password}, #{email})
    </insert>

    <!-- log in-->
    <select id = "login" resultType = "com.example.srsystem.domain.entity.Users">
        select *
        from users
        where username = #{username}
    </select>

    <select id="selectUserById" resultMap="UserResult" >
        select *
        from users
        where userId = #{userId}
    </select>

    <select id="selectUserInfoByUserName" resultMap="UserResult" >
        select *
        from users
        where username = #{username}
    </select>

    <update id="changePassword" parameterType="com.example.srsystem.domain.entity.Users">
        update users
        set password = #{password}
        where username = #{username}
    </update>

    <update id="sendVCode" parameterType="com.example.srsystem.domain.entity.Users">
        update users
        set vcode = #{vcode}
        where username = #{username}
    </update>

    <select id="confirmVCode" resultType="java.lang.Integer" >
        select vcode
        from users
        where username = #{username}
    </select>

    <insert id="addStock" parameterType="com.example.srsystem.domain.entity.Selfselect">
        insert into selfselect(`username`, `stockId`)
        values (#{username}, #{stockId})
    </insert>

    <select id="selectStock" resultType="com.example.srsystem.domain.entity.Selfselect" >
        select *
        from selfselect
        where username = #{username}
    </select>

    <delete id="deleteStock" parameterType="com.example.srsystem.domain.entity.Selfselect">
        delete from selfselect
        where id = #{id}
    </delete>

    <select id="selectData" resultType="com.example.srsystem.domain.model.Numeraidata" >
        select *
        from data333 right join stockrisk
        on data333.id=stockrisk.id;
    </select>

    <select id="viewData" resultType="com.example.srsystem.domain.model.Numeraidata" >
        select *
        from data333
        where id = #{id}
    </select>

    <select id="selectPrediction" resultType="com.example.srsystem.domain.model.Prediction" >
        select *
        from pre333
    </select>

    <select id="viewPrediction" resultType="com.example.srsystem.domain.model.Prediction" >
        select *
        from pre333
        where id = #{id}
    </select>

    <select id="selectRisk" resultType="com.example.srsystem.domain.model.Detail" >
        select data333.id, data333.target, pre333.prediction
        from data333 right join pre333
        on data333.id=pre333.id;
    </select>

    <insert id="addRisk" parameterType="com.example.srsystem.domain.entity.Stockrisk">
        insert into stockrisk(`id`, `risk`)
        values (#{id}, #{risk})
    </insert>
</mapper>